bind tec_riscv_bus sva_bus sva_bus_inst (.*);

//Definiciondelmodulo
module sva_bus #(parameter bits = 65, parameter broadcast = {3{1'b1}})(

  input wire clk,
  input wire reset,
  input wire pndng_mbc,
  input wire pndng_spi,
  input wire pndng_uart,
  input wire push_mbc,
  input wire push_spi,
  input wire push_uart,
  input wire pop_mbc,
  input wire pop_spi,
  input wire pop_uart,
  input wire [bits-1:0] D_pop_mbc,
  input wire [bits-1:0] D_pop_spi,
  input wire [bits-1:0] D_pop_uart,
  input wire [bits-1:0] D_push_mbc,
  input wire [bits-1:0] D_push_spi,
  input wire [bits-1:0] D_push_uart
  
 


);

sequence cond_for_spi_pndg_seq;
	@(posedge clk iff reset) (D_push_spi[59:57] == 1 && push_spi);
endsequence

sequence spi_pndg_seq;
	@(posedge sys_clk) ##[1:100] (pndng_spi);
endsequence

property pndng_after_push_prop;
	cond_for_spi_pndg_seq |=> spi_pndg_seq;
endproperty

//a1: assert property (@(posedge clk) disable iff (reset)  pndng_spi |=> pop_spi);
a1: assert property (pndng_after_push_prop);
endmodule : sva_bus
